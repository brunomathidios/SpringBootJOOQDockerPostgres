/*
 * This file is generated by jOOQ.
 */
package br.com.mathidios.springboot.jooq.docker.postgres.model.jooq.tables;


import br.com.mathidios.springboot.jooq.docker.postgres.model.jooq.Indexes;
import br.com.mathidios.springboot.jooq.docker.postgres.model.jooq.Keys;
import br.com.mathidios.springboot.jooq.docker.postgres.model.jooq.Public;
import br.com.mathidios.springboot.jooq.docker.postgres.model.jooq.tables.records.DeliveryProductRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeliveryProduct extends TableImpl<DeliveryProductRecord> {

    private static final long serialVersionUID = -1214988412;

    /**
     * The reference instance of <code>public.delivery_product</code>
     */
    public static final DeliveryProduct DELIVERY_PRODUCT = new DeliveryProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DeliveryProductRecord> getRecordType() {
        return DeliveryProductRecord.class;
    }

    /**
     * The column <code>public.delivery_product.id_product</code>.
     */
    public final TableField<DeliveryProductRecord, Integer> ID_PRODUCT = createField("id_product", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('delivery_product_id_product_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.delivery_product.nm_product</code>.
     */
    public final TableField<DeliveryProductRecord, String> NM_PRODUCT = createField("nm_product", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>public.delivery_product.id_restaurant</code>.
     */
    public final TableField<DeliveryProductRecord, Integer> ID_RESTAURANT = createField("id_restaurant", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.delivery_product.price_product</code>.
     */
    public final TableField<DeliveryProductRecord, Double> PRICE_PRODUCT = createField("price_product", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>public.delivery_product</code> table reference
     */
    public DeliveryProduct() {
        this(DSL.name("delivery_product"), null);
    }

    /**
     * Create an aliased <code>public.delivery_product</code> table reference
     */
    public DeliveryProduct(String alias) {
        this(DSL.name(alias), DELIVERY_PRODUCT);
    }

    /**
     * Create an aliased <code>public.delivery_product</code> table reference
     */
    public DeliveryProduct(Name alias) {
        this(alias, DELIVERY_PRODUCT);
    }

    private DeliveryProduct(Name alias, Table<DeliveryProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private DeliveryProduct(Name alias, Table<DeliveryProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DeliveryProduct(Table<O> child, ForeignKey<O, DeliveryProductRecord> key) {
        super(child, key, DELIVERY_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DeliveryProductRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DELIVERY_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DeliveryProductRecord> getPrimaryKey() {
        return Keys.PK_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DeliveryProductRecord>> getKeys() {
        return Arrays.<UniqueKey<DeliveryProductRecord>>asList(Keys.PK_PRODUCT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DeliveryProductRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DeliveryProductRecord, ?>>asList(Keys.DELIVERY_PRODUCT__FK_RESTAURANTE);
    }

    public DeliveryRestaurant deliveryRestaurant() {
        return new DeliveryRestaurant(this, Keys.DELIVERY_PRODUCT__FK_RESTAURANTE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeliveryProduct as(String alias) {
        return new DeliveryProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DeliveryProduct as(Name alias) {
        return new DeliveryProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DeliveryProduct rename(String name) {
        return new DeliveryProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DeliveryProduct rename(Name name) {
        return new DeliveryProduct(name, null);
    }
}
